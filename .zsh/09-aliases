#!/usr/bin/env zsh

# shellcheck disable=2139
true

# advice on using which, whence, and other shell built in functions
# https://unix.stackexchange.com/a/85250

# set default variables
  TTY_COLOR=""
  GNU_TTY_COLOR=""
  GNU_PRESERVE=""
  GNU=""

# create aliases to sudo and doas so that aliases can be run via sudo and doas
  if [ "$(whence -p sudo)" ]; then
    alias sudo='sudo '
  fi
  if [ "$(whence -p doas)" ]; then
    alias doas='doas '
  fi

# detect if tty color support is installed
  if [ "$(whence -p dircolors)" ]; then
    TTY_COLOR="--color=tty"
    GNU_TTY_COLOR="--color=tty"
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  fi

# detect if gnu coreutils are installed
  if [ "$(whence -p gdircolors)" ]; then
    GNU_TTY_COLOR="--color=tty"
    GNU_PRESERVE="--preserve-root"
    GNU="g"
    test -r ~/.dircolors && eval "$(gdircolors -b ~/.dircolors)" || eval "$(gdircolors -b)"
  fi

# directory management
  alias ..="cd .."
  alias cd..="cd .."

# set aliases which are dependent on the gnu version binaries
  if [ -z "${GNU}" ]; then
    # ls aliases
    alias ls="$(whence -p ls)"' -F '"${GNU_TTY_COLOR}"
    alias lsa="$(whence -p ls)"' -lah '"${GNU_TTY_COLOR}"
    alias l="$(whence -p ls)"' -la '"${GNU_TTY_COLOR}"
    alias ll="$(whence -p ls)"' -l '"${GNU_TTY_COLOR}"
    alias la="$(whence -p ls)"' -lA --group-directories-first '"${GNU_TTY_COLOR}"
    alias ls.="$(whence -p ls)"' -d .* '"${GNU_TTY_COLOR}"
    # add confirmation on mass changes
    alias mv="$(whence -p mv)"' -i'
    alias cp="$(whence -p cp)"' -i'
    # ln on openbsd doesn't have -i option, set only on linux systems
    if [[ $(uname) == 'Linux' ]]; then
      alias ln="$(whence -p ln)"' -i'
    fi
    # prompt if changing perms or owner on more than 3 files at a time
    alias chown="$(whence -p chown)"' '"${GNU_PRESERVE}"
    alias chmod="$(whence -p chmod)"' '"${GNU_PRESERVE}"
    alias chgrp="$(whence -p chgrp)"' '"${GNU_PRESERVE}"
  else
    # ls aliases
    alias ls="$(whence -p gls)"' -F '"${GNU_TTY_COLOR}"
    alias lsa="$(whence -p gls)"' -lah '"${GNU_TTY_COLOR}"
    alias l="$(whence -p gls)"' -la '"${GNU_TTY_COLOR}"
    alias ll="$(whence -p gls)"' -l '"${GNU_TTY_COLOR}"
    alias la="$(whence -p gls)"' -lA --group-directories-first '"${GNU_TTY_COLOR}"
    alias ls.="$(whence -p gls)"' -d .* '"${GNU_TTY_COLOR}"
    # prompt on mass file changes
    alias mv="$(whence -p gmv)"' -i'
    alias cp="$(whence -p gcp)"' -i'
    alias ln="$(whence -p gln)"' -i'
    # prompt if changing perms or owner on more than 3 files at a time
    alias chown="$(whence -p gchown)"' '"${GNU_PRESERVE}"
    alias chmod="$(whence -p gchmod)"' '"${GNU_PRESERVE}"
    alias chgrp="$(whence -p gchgrp)"' '"${GNU_PRESERVE}"
  fi

# grep options
  # detect if gnu grep is installed, otherwise alias regular names
  if [ "$(whence -p ggrep)" ]; then
    alias grep="$(whence -p ggrep)"' '"${GNU_TTY_COLOR}"
    alias fgrep="$(whence -p gfgrep)"' '"${GNU_TTY_COLOR}"
    alias egrep="$(whence -p gegrep)"' '"${GNU_TTY_COLOR}"
  elif [[ $(uname) == 'Linux' ]]; then
    alias grep="$(whence -p grep)"' '"${TTY_COLOR}"
    alias fgrep="$(whence -p fgrep)"' '"${TTY_COLOR}"
    alias egrep="$(whence -p egrep)"' '"${TTY_COLOR}"
  fi

# ssh
  # alias ssh to change the term to xterm before the session starts
  alias ssh='TERM=xterm ssh'

# who
  # show user idle time
  alias who='who -u'

# htop
  if [ "$(whence -p htop)" ]; then
    alias top="$(whence -p htop)"
  fi

# diff
  if [ "$(whence -p colordiff)" ]; then
    alias diff="$(whence -p colordiff)"
  fi

# wget
  # enable continue of downloads
  if [ "$(whence -p wget)" ]; then
    alias wget="$(whence -p wget)"' -c'
  fi

# tar
  if [ "$(whence -p tar)" ]; then
    alias untar="$(whence -p tar)"' -zxvf'
  fi

# most
  if [ "$(whence -p most)" ]; then
    PAGER="$(which most)"
    export PAGER
  fi

# rsync
  if [ "$(whence -p rsync)" ]; then
    alias rsync-copy="$(whence -p rsync)"' -avzh --progress --stats'
    alias rsync-mirror="$(whence -p rsync)"' -avzh --progress --stats --delete-before --delete-excluded'
    alias rsync-move="$(whence -p rsync)"' -avzh --progress --stats --remove-source-files'
    alias rsync-synchronize="$(whence -p rsync)"' -avzuh --progress --stats --delete'
    alias rsync-update="$(whence -p rsync)"' -avzuh --progress --stats'
  fi

# cli to online paste aliases
  alias termbin='nc termbin.com 9999'
  alias clibin='curl -q -F "clbin=<-" https://clbin.com; echo Append "?hl" to the url for highlighting'
  alias pastebin=clibin

# grep output for lines without common comment
  alias nocomments='grep -Evi '\''^( *)(#|$|;|//|--|rem|::|\"|\|\|)'\'''
  alias comments='grep -Ei '\''^(#|;|//|--|rem|::|\"|\|\|)'\'''

# dmesg
  if [[ $(uname) == 'Linux' ]]; then
    alias dmesg='dmesg -L auto -T'
  fi

# disk, partition, folder and file usage commands
  # disk usage in the current directory
  alias usagedirectory="$(whence -p du)"' -ch 2> /dev/null | tail -1'

  # total disk usage
  alias usagedisk="$(whence -p df)"' -hl --total | tail -1'

  # individual partition usages without the temporary memory values
  alias usagepartition="$(whence -p df)"' -hlT --exclude-type=tmpfs --exclude-type=devtmpfs'

  # largest folders within current dir
  function usagehogs {
    du -k ./* 2>/dev/null | sort -nr | awk '{ if($1>=1024*1024) {size=$1/1024/1024; unit="G"} else if($1>=1024) {size=$1/1024; unit="M"} else {size=$1; unit="K"}; if(size<10) format="%.1f%s"; else format="%.0f%s"; res=sprintf(format,size,unit); printf "%-8s %s\n",res,$2 }'
  }

# unset variables
  unset TTY_COLOR
  unset GNU_TTY_COLOR
  unset GNU_PRESERVE
  unset GNU
